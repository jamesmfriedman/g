@mixin clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}


@mixin text-default {
    color: rgba(0,0,0,.8);
}

@mixin text-secondary {
    color: rgba(0,0,0,.5); 
}

@mixin text-tertiary {
    color: rgba(0,0,0,.3); 
}

@mixin text-inverse-default {
    color: rgba(255,255,255,1);
}

@mixin text-inverse-secondary {
    color: rgba(255,255,255,.8);
}

@mixin text-inverse-tertiary {
    color: rgba(255,255,255,.5); 
}

@mixin g-text-styles() {
    @include text-default;

    &.inherit-color {
    	color: inherit;
    }

    &.secondary {
        @include text-secondary;
    }

    &.tertiary {
        @include text-tertiary;
    }

    &.inverse {
        @include text-inverse-default;

        &.secondary {
            @include text-inverse-secondary;            
        }

        &.tertiary {
            @include text-inverse-tertiary;               
        }
    }

    &.bold {
        font-weight: bold;
    }

    &.italic {
        font-style: italic;
    }

    &.line-through {
        text-decoration: line-through;
    }

    &.danger {
        color: $g-color-danger-bg; 
    }

    &.success {
        color: $g-color-success-bg;
    }
}

@mixin g-fade-in-out {
    /***
     * Animations
     */
    &.#{$g-animate-classname} {
        &.ng-hide-add, &.ng-hide-remove {
            transition: 0s all;
        }

        &.ng-hide-add-active, &.ng-hide-remove-active, &.ng-enter, &.ng-leave {
            transition: .3s opacity;
        }

        &.ng-hide-remove, &.ng-hide-add.ng-hide-add-active, &.ng-enter, &.ng-leave.ng-leave-active { 
            opacity: 0; 
        }
        
        &.ng-hide-add, &.ng-hide-remove.ng-hide-remove-active, &.ng-enter.ng-enter-active, &.ng-leave { 
            opacity: 1 ;
        }
    }
}

@mixin g-touch-highlight($color: rgba(0,0,0,0)) {
    -webkit-tap-highlight-color: $color;
}

/***********************************************************************************************************************
 * Responsive Helpers
 ***********************************************************************************************************************/ 
@mixin screen-xs {
    @media (min-width: map-get($g-grid-breakpoints, 'xs')) {
        @content;
    }
}

@mixin screen-sm {
    @media (min-width: map-get($g-grid-breakpoints, 'sm')) {
        @content;
    }
}

@mixin screen-md {
    @media (min-width: map-get($g-grid-breakpoints, 'md')) {
        @content;
    }
}

@mixin screen-lg {
    @media (min-width: map-get($g-grid-breakpoints, 'lg')) {
        @content;
    }
}

@mixin screen-xl {
    @media (min-width: map-get($g-grid-breakpoints, 'xl')) {
        @content;
    }
}


@mixin screen-xs-only {
    @media (min-width: map-get($g-grid-breakpoints, 'xs')) and (max-width: map-get($g-grid-breakpoints, 'sm')) {
        @content;
    }
}

@mixin screen-sm-only {
    @media (min-width: map-get($g-grid-breakpoints, 'sm')) and (max-width: map-get($g-grid-breakpoints, 'md')) {
        @content;
    }
}

@mixin screen-md-only {
    @media (min-width: map-get($g-grid-breakpoints, 'md')) and (max-width: map-get($g-grid-breakpoints, 'lg')) {
        @content;
    }
}

@mixin screen-lg-only {
    @media (min-width: map-get($g-grid-breakpoints, 'lg')) and (max-width: map-get($g-grid-breakpoints, 'xl')) {
        @content;
    }
}

@mixin screen-xl-only {
    @media (min-width: map-get($g-grid-breakpoints, 'xl')) {
        @content;
    }
}